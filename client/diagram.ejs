<script type="text/javascript" src="/node_modules/chart.js/dist/Chart.min.js"></script>
<script src="/node_modules/axios/dist/axios.min.js"></script>
<script src="/assets/main.js"></script>
<script>
	//  https://coronavirusapi-france.now.sh/AllDataByDate?date=2020-04-19
	/**
	 * Tout le js que je mets en dessous de ce commentaire ça sera dans le main.js et dans l'event click
	 * Je mets une date en dur mais il faudra remplacer par la date récupérer dans l input comme on a dans le main
	 * Tu pourras prendre tout ce qu'il y a dans la function et supprimer la function car j en ai juste besoin pour
	 * le async mais sur l event click il y a deja un async
	 */

	async function fetchStatDataByDate(date = '', code = '') {

        // Check if there are given value for date and code 
        if(date.length == 0 || code.length == 0) {
            console.error('Date and department code must be specified.')
            return;
        }

		try {

            // Retrieve stat for given date and filter through the global data
            let fetchApi = await axios.get(`https://coronavirusapi-france.now.sh/AllDataByDate?date=${date}`)
            let globalData = await fetchApi.data.allFranceDataByDate
            let getDepartmentData = globalData.filter(department => department.code == code)
            let departmentData = getDepartmentData[0]

            if(typeof(departmentData) != 'undefined') {
                let tryUpdateData = await axios.get(`/update/${departmentData.date}/${departmentData.code}`)

                // If stat does not exists, create it in DynamoDB
                // update it otherwise.
                if(tryUpdateData.status == 204) {
                    return axios.post(`/`, {
                        death_count: departmentData.deces,
                        heal_count: departmentData.gueris,
                        new_hospitalize_count: departmentData.nouvellesHospitalisations,
                        source: departmentData.source.nom,
                        department_name: departmentData.nom,
                        hospitalize_count: departmentData.hospitalises,
                        new_intensive_care_count: departmentData.nouvellesReanimations,
                        department_code: departmentData.code,
                        date_stat: departmentData.date,
                        intensive_care_count: departmentData.reanimation,
                    })
                } else {
                    return tryUpdateData
                }
            } else {
                let request = JSON.stringify({
                    'date_stat': date,
                    'department_code': code
                })
                console.error('No items were found for parameters ' + request)
                return;
            }
		} catch(error) {
			return error
        }
    }
</script>